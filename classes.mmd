---
config:
  look: neo
  layout: elk
  theme: base
title: Sample title
---
classDiagram
direction LR
	namespace Controller {
        class CRUDController {
	        +create(E object) int
	        +getById(int id) E
	        +getAll() List~E~
	        +update(E object, int id) boolean
	        +delete(E object) boolean
        }
        class TodoListController {
	        -List~TodoControllerListener~TodoListController~~ listeners$
	        +create(TodoCheckList object) int
	        +addListener(TodoControllerListener~TodoListController~ listener)
	        +removeListener(TodoControllerListener~TodoListController~ listener)
	        #fireEvent()
	        +getById(int id) TodoCheckList
	        +update(TodoCheckList object, int id) boolean
	        +delete(TodoCheckList object) boolean
	        +getAll() List~TodoCheckList~
	        +getRelatedItems(TodoCheckList object) List~TodoItem~
        }
        class RelationController {
	        +getRelatedItems(E object) List~T~
        }
        class TodoItemController {
	        -List~TodoControllerListener~TodoItemController~~ listeners$
	        +addListener(TodoControllerListener~TodoItemController~ listener)
	        +removeListener(TodoControllerListener~TodoItemController~ listener)
	        #fireEvent()
	        +create(TodoItem object) int
	        +getById(int id) TodoItem
	        +update(TodoItem object, int id) boolean
	        +delete(TodoItem object) boolean
	        +getAll() List~TodoItem~
        }
        class SQLiteDB {
	        +Connection conn$
	        +init()$
        }
        class TodoNoteController {
	        -List~TodoControllerListener~TodoNoteController~~ listeners$
	        +addListener(TodoControllerListener~TodoNoteController~ listener)
	        +removeListener(TodoControllerListener~TodNoteController~ listener)
	        #fireEvent()
	        +create(TodoNote object) int
	        +getById(int id) TodoItem
	        +update(TodoNote object, int id) boolean
	        +delete(TodoNote object) boolean
	        +getAll() List~TodoNote~
	        +getNoteRecord(TodoNote note) String
        }
        class GenericDBQuery {
	        +insertRecord(String table, Map args) int$
	        +selectAll(String table) ResultSet$
	        +selectWhereEqualsRecords(String table, String column, int value) ResultSet$
        }
	}
	namespace Events {
        class TodoControllerListener {
	        +listChanged(T list)
        }
        class WindowManagerDispatcher {
	        +onWindowChanged(JComponent event)
        }
        class WindowManager {
	        +WindowManagerDispatcher dispatcher$
	        +changeWindow(JComponent window, String windowTitle)$
	        +repaintWindow()$
        }
	}
	namespace Exception {
        class ItemNotFoundException {
        }
        class OrphanedRelationException {
        }
	}
	namespace Model {
        class AbstractTodoList {
	        -int id
	        -String title
	        +AbstractTodoList()
	        +getType() int*
	        +getTitle() String
	        +setTitle(String title)
	        +getId() int
	        +setId(int id)
        }
        class TodoCheckList {
	        +int TYPE$
	        +TodoCheckList(String title)
	        +getType() int
        }
        class TodoNote {
	        +int TYPE$
	        -String noteContent
	        +TodoNote(String title)
	        +getContent() String
	        +setContent(String noteContent)
	        +getType() int
        }
        class TodoItem {
	        -int id
	        -String stringContent
	        -boolean doneState
	        -TodoCheckList parentList
	        +getStringContent String
	        +TodoItem(TodoCheckList list)
	        +setStringContent(String stringContent)
	        +setState(boolean state)
	        +getState() boolean
	        +getId() int
	        +setId(int id)
	        +TodoCheckList getList()
        }
	}
	namespace UI {
        class Dashboard {
	        +Dashboard()
	        -createTopBar() JPanel
        }
        class MainFrame {
	        #Container cp
	        #JComponent child
	        +MainFrame()
        }
        class InputWindow {
	        #BorderLayout layout
	        #Container cp
	        #String message
	        #JComponent input
	        #String action
	        #JButton actionButton
	        -List~ActionListener~ listeners
	        -KeyAdapter keyListener
	        +InputWindow(String title, String message, JComponent input, String action)
	        +InputWindow(String title, String, message, String action)
	        -createTopBar() JComponent
	        +setInputBar(JComponent input)
	        -onPressed(KeyEvent e)
	        #getInputConstraints() GridBagConstraints
	        +addActionListener(ActionListener l)
	        +removeActionListener(ActionListener l)
	        #fireActionEvent(ActionEvent e)
	        #setButtonEnabled(boolean state)
        }
        class ListCard {
	        -AbstractTodoList list
	        +ListCard(TodoCheckList list)
	        -createActionBar() JPanel
        }
        class Title {
	        +Title(String text)
	        +Title(String text, int fontSize)
        }
        class SingleTodoItem {
	        -TodoItem item
	        #JCheckBox checkbox
	        +SingleTodoItem(TodoItem item)
	        -onItemStateChanged(ItemEvent e)
	        -onDeleteButtonClick()
	        -onEditButtonClick()
        }
        class TitleInputWindow {
	        #JTextField inputField
	        +TitleInputWindow()
	        +TitleInputWindow(String message, String action, String content)
	        +getTextContent() String
	        #getInputConstraints() GridBagConstraints
        }
        class TodoInputWindow {
	        #JTextArea area
	        +TodoInputWindow()
	        +TodoInputWindow(String action, String content)
	        +getTextContent() String
        }
        class TodoCheckboxList {
	        #TodoCheckList list
	        -GridBagConstraints defaultConstraints
	        #TodoControllerListener~TodoItemController~ listener
	        +TodoCheckboxList(TodoCheckList list)
	        +paintButtons()
	        +repaintButtons()
	        +onBeforeDestroy()
        }
        class TodoListList {
	        #GridLayout layout
	        -TodoControllerListener~TodoListController~ listListener
	        -TodoControllerListener~TodoNoteController~ noteListener
	        +TodoListList()
	        -panelResized()
	        -paintLists()
	        -repaintLists()
	        +onBeforeDestroy()
        }
        class SingleTodoNote {
	        #BorderLayout layout
	        -TodoNote note
	        -JTextArea area
	        +SingleTodoNote(TodoNote note)
	        -createTopBar() JPanel
        }
        class ThemeManager {
	        +getDefaults() UIDefaults$
	        +getDefaultFont() Font$
	        +modifyDefaultFont(Map~TextAttribute, Object~ newAttributes) Font$
	        +setTransparentButton(JButton button)$
        }
        class SingleTodoList {
            #BorderLayout layout
            -TodoCheckList list
            #TodoCheckboxist listDisplay

            +SingleTodoList(TodoCheckList list)
            -createTopBar() JPanel
        }
	}
    class EventListener["java.util.EventListener"] {
    }
    class JavaException["java.lang.Exception"] {
    }
    class JPanel["javax.swing.JPanel"] {
    }
    class JFrame["javax.swing.JFrame"] {
    }
    class JLabel["javax.swing.JLabel"] {
    }
    class Main {
	    +MainFrame mainFrame
	    +main(String[] args)$
    }


	<<interface>> CRUDController
	<<interface>> RelationController
	<<interface>> TodoControllerListener
	<<interface>> WindowManagerDispatcher
	<<abstract>> AbstractTodoList
	<<abstract>> InputWindow
	<<interface>> JavaException

    CRUDController <|-- TodoListController : implements
    RelationController <|-- TodoListController : implements
    CRUDController <|-- TodoItemController : implements
    TodoControllerListener *-- TodoListController
    TodoControllerListener *-- TodoNoteController
    TodoControllerListener *-- TodoItemController
    EventListener <|-- TodoControllerListener
    WindowManagerDispatcher *-- WindowManager
    JavaException <|-- ItemNotFoundException : implements
    JavaException <|-- OrphanedRelationException : implements
    AbstractTodoList <|-- TodoCheckList
    AbstractTodoList <|-- TodoNote
    TodoCheckList *-- TodoItem
    JPanel <|-- Dashboard
    JFrame <|-- MainFrame
    JFrame <|-- InputWindow
    JPanel <|-- ListCard
    JLabel <|-- Title
    JPanel <|-- SingleTodoItem
    MainFrame *-- Main
    InputWindow <|-- TitleInputWindow
    InputWindow <|-- TodoInputWindow
    JPanel <|-- TodoCheckboxList
    TodoCheckList *-- TodoCheckboxList
    JPanel <|-- TodoListList
    TodoCheckList *-- SingleTodoList
    TodoCheckboxList *-- SingleTodoList
    TodoNote *-- SingleTodoNote
    JPanel <|-- SingleTodoList
    JPanel <|-- SingleTodoNote
